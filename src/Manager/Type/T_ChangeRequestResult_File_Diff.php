<?php

namespace Brix\Coder\Manager\Type;

class T_ChangeRequestResult_File_Diff
{

    /**
     * The full path and filename of the existing or new file
     * @var string
     */
    public string $path;

    

    /**
     * Return the modified contents as a diff generated by "diff -u" command to be applied to the original file
     * using "patch" command.
     * 
     * Return edits similar to unified diffs that `diff -U0` would produce.
     *
     * Make sure you include the first 2 lines with the file paths.
     * Don't include timestamps with the file paths.
     *
     * Start each hunk of changes with a `@@ ... @@` line. Use line index (starting from 1) as reference.
     *
     * The user's patch tool needs CORRECT patches that apply cleanly against the current contents of the file!
     * Think carefully and make sure you include and mark all lines that need to be removed or changed as `-` lines.
     * Make sure you mark all new or modified lines with `+`.
     * Don't leave out any lines or the diff patch won't apply correctly.
     *
     * Indentation matters in the diffs!
     *
     * Start a new hunk for each section of the file that needs changes.
     *
     * Only output hunks that specify changes with `+` or `-` lines.
     * Skip any hunks that are entirely unchanging ` ` lines.
     *
     * Output hunks in whatever order makes the most sense.
     * Hunks don't need to be in any particular order.
     *
     * When editing a function, method, loop, etc use a hunk to replace the *entire* code block.
     * Delete the entire existing version with `-` lines and then add a new, updated version with `+` lines.
     * This will help you generate correct code and correct diffs.
     *
     * To move code within a file, use 2 hunks: 1 to delete it from its current location, 1 to insert it in the new location.
     *
     * @var string
     */
    public string $contentDiff = "";
}
